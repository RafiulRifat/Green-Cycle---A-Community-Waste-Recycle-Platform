@model GreenCycle.Models.Entities.Post
@{
    ViewBag.Title = Model.Title;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />

<div class="container my-4">
    <nav aria-label="breadcrumb" class="mb-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index","Post")">Posts</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">
                @Model.Title
            </li>
        </ol>
    </nav>

    <h1 class="mb-2">@Model.Title</h1>

    <div class="text-muted mb-4">
        By @Model.Author
        · @((Model.PublishedAtUtc ?? Model.CreatedAtUtc).ToString("MMMM d, yyyy"))
    </div>

    @* Cover image (optional) *@
    @if (!string.IsNullOrWhiteSpace(Model.CoverImagePath))
    {
        <figure class="mb-4">
            <img src="@Url.Content(Model.CoverImagePath)"
                 alt="@Model.CoverImageAlt"
                 class="img-fluid rounded" />
            @if (!string.IsNullOrWhiteSpace(Model.CoverImageAlt))
            {
                <figcaption class="mt-2 text-muted small">@Model.CoverImageAlt</figcaption>
            }
        </figure>
    }

    @* FULL body *@
    <article class="fs-5 lh-lg">
        @* If Body is plain text, this prints it safely.
            If you store HTML in Body and trust the source, you may use @Html.Raw(Model.Body) instead. *@
        @Model.Body
    </article>

    <div class="mt-4">
        <a href="@Url.Action("Index","Post")" class="btn btn-outline-secondary">← Back to Posts</a>
    </div>
</div>
